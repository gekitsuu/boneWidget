on:
  push:
    branches:
      - master

permissions:
  contents: write
  issues: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: simple
      - name: Create artifacts directory
        if: ${{ steps.release.outputs.release_created }}
        run: mkdir -p artifacts
      - name: Create boneWidget subdirectory
        if: ${{ steps.release.outputs.release_created }}
        run: mkdir -p boneWidget
      - name: Copy repository contents to boneWidget subdirectory
        if: ${{ steps.release.outputs.release_created }}
        run: |
          # Copy all files except .git directory and the boneWidget directory itself
          rsync -av --exclude='.git' --exclude='boneWidget' . boneWidget/
      - name: Update __init__.py with new version
        if: ${{ steps.release.outputs.release_created }}
        env:
          VERSION: ${{ steps.release.outputs.tag_name }}
          MAJOR: $(echo "$VERSION" | cut -d'.' -f1)
          MINOR: $(echo "$VERSION" | cut -d'.' -f2)
          PATCH: $(echo "$VERSION" | cut -d'.' -f3)
        run: |
          sed -i "s/^    \"version\":.*/    \"version\": (${MAJOR}, ${MINOR}, ${PATCH})/" boneWidget/__init__.py
      - name: Create zip archive
        if: ${{ steps.release.outputs.release_created }}
        env:
          VERSION: ${{ steps.release.outputs.tag_name }}
        run: |
          zip -r "artifacts/boneWidget-$VERSION.zip" boneWidget/
      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          VERSION: ${{ steps.release.outputs.tag_name }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./artifacts/boneWidget-${{ steps.release.outputs.tag_name }}.zip